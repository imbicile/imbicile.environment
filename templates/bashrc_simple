#!/bin/bash

# Сброс
color_off='\033[0m'

# Тип
fg='\033[38;2;'

## RGB цвета
red='255;0;0m'
yellow='255;255;0m'
lime='0;255;0m'
aqua='0;255;255m'
fuchsia='255;0;255m'
orange='255;69;0m'

# Задаем параметры истории и отображения
HISTCONTROL=ignoreboth:erasedups
PROMPT_COMMAND='history -a'
HISTSIZE=100000
HISTFILESIZE=30000

shopt -s histappend   # история команд будет добавлена в файл $HISTFILE
shopt -s checkwinsize # обновляет переменные LINES
shopt -s cmdhist      # все строки многострочной команды как одна в истории
shopt -s autocd       # переход в каталог без cd
unset MAILCHECK       # отключить инфломацию о почте

# Пути до исполняемых файлов
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# Пути до исполняемых файлов профиля ~/.local/bin
if [ -d "$HOME/.local/bin" ]; then
  PATH="$HOME/.local/bin:$PATH"
fi

# Включаем дополнительный файл алисов если такой есть ~/.bashrc_aliases
if [ -f "$HOME/.bashrc_aliases" ]; then
  # shellcheck source=/dev/null
  . "$HOME/.bashrc_aliases"
fi

# Конфигурация без значков
parse_git_branch() {
  git branch 2>/dev/null | grep "\*" | awk '{print "~>["$2"]"}'

}
parse_git_status() {
  git_status=$(git status --porcelain --ignore-submodules 2>/dev/null | wc -l)
  if [[ "$git_status" != 0 ]]; then
    printf "[±%s]" "$git_status"
  fi
}
parse_git_pull() {
  git_push=$(git status --long 2>/dev/null | grep -c 'git pull')
  if [[ "$git_push" != 0 ]]; then
    printf "[↓]"
  fi
}
parse_git_push() {
  git_push=$(git status --long 2>/dev/null | grep -c 'git push')
  if [[ "$git_push" != 0 ]]; then
    printf "[↑]"
  fi
}
show_git="${fg}${fuchsia}\$(parse_git_branch)${fg}${orange}\$(parse_git_pull)${fg}${lime}\$(parse_git_push)${fg}${red}\$(parse_git_status)${color_off}"

if [ "$(id -un)" = root ]; then
  PS1="┌─╼[${fg}${red}\u${color_off}]╾╼[${fg}${yellow}\H${color_off}]╾╼[${fg}${aqua}\w${color_off}]${show_git}\n└───╼ "
else
  PS1="┌─╼[${fg}${lime}\u${color_off}]╾╼[${fg}${yellow}\H${color_off}]╾╼[${fg}${aqua}\w${color_off}]${show_git}\n└───╼ "
fi

[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Включаем папку скриптов bash_completion / k8s / ...
if [ -d /etc/profile.d ]; then
  for i in /etc/profile.d/*.sh; do
    if [ -r "$i" ]; then
      # shellcheck source=/dev/null
      . "$i"
    fi
  done
  unset i
fi

# Подключаем dircolors
if [ -x /usr/bin/dircolors ]; then
  if [ -r ~/.dircolors ]; then
    eval "$(dircolors -b ~/.dircolors)"
  else
    eval "$(dircolors -b)"
  fi
fi

# Раскрашиваем man
export LESS_TERMCAP_mb=$'\033[0;36m' # начало мигания (Cyan)
export LESS_TERMCAP_md=$'\033[1;36m' # начало жирного шрифта (BCyan)
export LESS_TERMCAP_me=$'\033[0m'    # сброс (color_off)
export LESS_TERMCAP_se=$'\033[0m'    # сброс выделения (color_off)
export LESS_TERMCAP_so=$'\033[0;36m' # начало выделения - информация (Cyan)
export LESS_TERMCAP_ue=$'\033[0m'    # конец подчеркивания (color_off)
export LESS_TERMCAP_us=$'\033[0;93m' # начало подчеркивания (IYellow)

# Предотвращает случайное удаление файлов.
alias mkdir='mkdir -p'

# Цвета auto
alias ls='ls --color'
alias dmesg='dmesg --color'
alias gcc='gcc -fdiagnostics-color=auto'
alias dir='dir --color'
alias diff='diff --color'
alias grep='grep --color'
alias fgrep='fgrep --color'
alias egrep='egrep --color'

# Алиасы LS
alias ll='ls -alF'       # показать скрытые файлы с индикатором
alias la='ls -Al'        # показать скрытые файлы
alias lx='ls -lXB'       # сортировка по расширению
alias lk='ls -lSr'       # сортировка по размеру
alias lc='ls -lcr'       # сортировка по времени изменения
alias lu='ls -lur'       # сортировка по времени последнего обращения
alias lr='ls -lR'        # рекурсивный обход подкаталогов
alias lt='ls -ltr'       # сортировка по дате
alias lm='ls -al | more' # вывод через 'more'

# Цветной cat
# Посмотреть все стили
# pygmentize -L styles --json | jq
PYGMENTIZE="$(which pygmentize)"
if [ -n "$PYGMENTIZE" ]; then
  alias ccat='pygmentize -g -O full,style=monokai'
fi

# Цветные команды
GRC="$(which grc)"
if [ -n "$GRC" ]; then
  alias ping="grc --colour=auto ping"
  alias traceroute="grc --colour=auto traceroute"
  alias netstat="grc --colour=auto netstat"
  alias stat="grc --colour=auto stat"
  alias ss="grc --colour=auto ss"
  alias diff="grc --colour=auto diff"
  alias wdiff="grc --colour=auto wdiff"
  alias last="grc --colour=auto last"
  alias mount="grc --colour=auto mount"
  alias ps="grc --colour=auto ps"
  alias dig="grc --colour=auto dig"
  alias ifconfig="grc --colour=auto ifconfig"
  alias mount="grc --colour=auto mount"
  alias df="grc --colour=auto df"
  alias du="grc --colour=auto du"
  alias ip="grc --colour=auto ip"
  alias env="grc --colour=auto env"
  alias iptables="grc --colour=auto iptables"
  alias lspci="grc --colour=auto lspci"
  alias lsblk="grc --colour=auto lsblk"
  alias lsof="grc --colour=auto lsof"
  alias blkid="grc --colour=auto blkid"
  alias id="grc --colour=auto id"
  alias fdisk="grc --colour=auto fdisk"
  alias free="grc --colour=auto free"
  alias systemctl="grc --colour=auto systemctl"
  alias journalctl="grc --colour=auto journalctl"
  alias sysctl="grc --colour=auto sysctl"
  alias tcpdump="grc --colour=auto tcpdump"
  alias tune2fs="grc --colour=auto tune2fs"
  alias lsmod="grc --colour=auto lsmod"
  alias lsattr="grc --colour=auto lsattr"
  alias nmap="grc --colour=auto nmap"
  alias uptime="grc --colour=auto uptime"
  alias getfacl="grc --colour=auto getfacl"
  alias iwconfig="grc --colour=auto iwconfig"
  alias whois="grc --colour=auto whois"
fi

# Функция распаковки extract
function extract() {
  if [ -z "$1" ]; then
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
  else
    if [ -f "$1" ]; then
      case "$1" in
      *.tar.bz2) tar xvjf ./"$1" ;;
      *.tar.gz) tar xvzf ./"$1" ;;
      *.tar.xz) tar xvJf ./"$1" ;;
      *.lzma) unlzma ./"$1" ;;
      *.bz2) bunzip2 ./"$1" ;;
      *.rar) unrar x -ad ./"$1" ;;
      *.gz) gunzip ./"$1" ;;
      *.tar) tar xvf ./"$1" ;;
      *.tbz) tar xvjf ./"$1" ;;
      *.tbz2) tar xvjf ./"$1" ;;
      *.tgz) tar xvzf ./"$1" ;;
      *.zip) unzip ./"$1" ;;
      *.Z) uncompress ./"$1" ;;
      *.7z) 7z x ./"$1" ;;
      *.xz) unxz ./"$1" ;;
      *.deb) ar xv ./"$1" ;;
      *.exe) cabextract ./"$1" ;;
      *) echo "extract: '$1' - неизвестный архив" ;;
      esac
    else
      echo "$1 - файл не существует"
    fi
  fi
}
